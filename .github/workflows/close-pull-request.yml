name: Pull Request Closed

on:
  pull_request:
    branches-ignore:
      - "live"
    types:
      - closed

jobs:
  clean_up:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get PR branch name
        id: get_pr_branch_name
        run: |
          pr_branch_name=$(jq --raw-output .pull_request.head.ref "$GITHUB_EVENT_PATH")
          echo "pr_branch_name=${pr_branch_name}" >> $GITHUB_OUTPUT
          echo $pr_branch_name

      - name: Search branch by name
        id: get_branch_id
        run: |
          branch_id=$(curl --silent \
            "https://console.neon.tech/api/v2/projects/${{ secrets.NEON_PROJECT_ID }}/branches" \
            --header "Accept: application/json" \
            --header "Content-Type: application/json" \
            --header "Authorization: Bearer ${{ secrets.NEON_API_KEY }}" \
            | jq -r .branches \
            | jq -c '.[] | select(.name | contains("'${{ steps.get_pr_branch_name.outputs.pr_branch_name }}'")) .id' \
            | jq -r \
            ) \
            
          echo "branch_id=${branch_id}" >> $GITHUB_OUTPUT

      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v2
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch_id: ${{ steps.get_branch_id.outputs.branch_id }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Delete Preview Environment variables
        run: |
          token="${{ secrets.VERCEL_TOKEN }}"
          branch_name="${{ steps.get_pr_branch_name.outputs.pr_branch_name }}"

          vercel link -t $token -y
          
          environments=$(vercel env ls preview $branch_name -t $token -y --json)
          echo "Environment vars to delete: $environments"

          for env in $environments; do
            echo "Removing environment: $env"
            vercel env rm "$env" preview $branch_name -t $token -y
          done

          # echo "Listing environment variables for preview environment and branch: $branch_name"
          # environments=$(vercel env ls preview $branch_name -t $token -y | awk -v branch="$branch_name" '$4=="Preview" && $5=="("branch")" {print $1}')
          # echo "Environment vars to delete: $environments"
      
          # # Check if environments variable is empty or not
          # if [ -z "$environments" ]; then
          #   echo "No environment variables found to delete."
          # else
          #   for env_name in $environments; do
          #     echo "Removing environment variable: $env_name"
          #     # Delete environment variable by name
          #     vercel env rm "$env_name" --environment=preview --git-branch="$branch_name" -t $token -y
          #   done
          # fi
